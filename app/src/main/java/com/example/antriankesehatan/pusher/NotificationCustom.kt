package com.example.antriankesehatan.pusherimport android.app.NotificationChannelimport android.app.NotificationManagerimport android.app.PendingIntentimport android.content.BroadcastReceiverimport android.content.Contextimport android.content.Intentimport android.os.Buildimport android.util.Logimport androidx.core.app.NotificationCompatimport com.example.antriankesehatan.MainActivityimport com.example.antriankesehatan.Rclass NotificationCustom : BroadcastReceiver() {    companion object {        const val EXTRA_DESCRIPTION = "extra_description"        const val EXTRA_TITLE = "extra_title"    }    override fun onReceive(context: Context, intent: Intent?) {        val title = intent?.getStringExtra(EXTRA_TITLE) ?: ""        val desc = intent?.getStringExtra(EXTRA_DESCRIPTION) ?: ""        if (intent != null) {            sendMessageNotification(intent, context, title, desc)        }    }    fun sendMessageNotification(        intent: Intent,        context: Context,        title: String,        description: String,    ) {        Log.d("aaaaa", title+description)        showNotif(intent, context, title, description)    }    private fun showNotif(intent: Intent, context: Context, title: String, description: String) {        val notificationId = 10        val channelId = "antrian-channel"        val notificationManager = context.getSystemService(NotificationManager::class.java)        lateinit var channel: NotificationChannel        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {            val name = "antrian_kesehatan"            val description = "notification antrian kesehatan"            val importance = NotificationManager.IMPORTANCE_DEFAULT            channel = NotificationChannel("antrian", name, importance)            channel.description = description            notificationManager!!.createNotificationChannel(channel)        }        val intentToActivity = Intent(context, MainActivity::class.java)        intentToActivity.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK        val pendingIntent = PendingIntent.getActivity(context, 0, intent, 0)        val builder = context.let {            NotificationCompat.Builder(it, channelId)                .setSmallIcon(R.mipmap.ic_launcher)                .setContentTitle(title)                .setContentText(description)                .setContentIntent(pendingIntent)                .setPriority(NotificationCompat.PRIORITY_DEFAULT)                .setAutoCancel(true)        }        notificationManager?.notify(notificationId, builder.build())    }}